{"ast":null,"code":"var _jsxFileName = \"C:\\\\Apps\\\\swine-fever-website-testing\\\\swine-fever-website-testing\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Sidebar from './components/Sidebar';\nimport Gallery from './components/Gallery';\nimport 'leaflet/dist/leaflet.css'; // Leaflet CSS for map styling\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'; // Components from React-Leaflet for map rendering\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport MarkerClusterGroup from 'react-leaflet-cluster'; // Component for clustering markers on the map\nimport React, { useEffect, useState, useRef } from 'react'; // React core library for functional components and hooks\nimport L from 'leaflet'; // Leaflet library for map functionality\n\n// Custom marker icon configuration using Leaflet\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customIcon = new L.Icon({\n  iconUrl: require('./assets/location_icon.png'),\n  iconSize: [15, 25],\n  // Size of the icon in pixels\n  iconAnchor: [12, 41] // Anchor position of the icon relative to its size\n});\n\n// Script loader function (Add this inside or outside of your component as needed)\nconst loadGoogleMapsScript = apiKey => {\n  return new Promise((resolve, reject) => {\n    if (window.google) {\n      resolve();\n      return;\n    }\n    const script = document.createElement('script');\n    const params = new URLSearchParams({\n      key: apiKey,\n      libraries: 'places',\n      // Add 'places' library for Autocomplete\n      callback: 'initMap'\n    });\n    script.src = `https://maps.googleapis.com/maps/api/js?${params}`;\n    script.async = true;\n    script.defer = true;\n    script.onerror = () => reject(new Error(\"Google Maps API could not load.\"));\n    document.head.appendChild(script);\n    window.initMap = () => {\n      resolve();\n    };\n  });\n};\n\n/**\n * Main application component that renders the map and sidebar.\n *\n * This component fetches data about positive cases and displays them on a Leaflet map,\n * with markers clustered for better visualization.\n */\nconst App = () => {\n  _s();\n  // State variable to store case data\n  const [cases, setCases] = useState([]);\n  const [currentView, setCurrentView] = useState('home');\n  const [isMapLoaded, setIsMapLoaded] = useState(false);\n  const [autocomplete, setAutocomplete] = useState(null);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [latLng, setLatLng] = useState(null); // State for latitude and longitude\n  const inputRef = useRef(null);\n  useEffect(() => {\n    const apiKey = 'AIzaSyAjp79bHPUDPrGUBUEUriQEtqPVTUSjIlk'; // Replace with your actual Google Maps API key\n\n    // Load Google Maps script\n    loadGoogleMapsScript(apiKey).then(() => {\n      console.log(\"Google Maps API loaded successfully\");\n      setIsMapLoaded(true); // Mark map as loaded\n\n      // Initialize Autocomplete after the API is loaded\n      const input = inputRef.current;\n      if (input && window.google) {\n        const autocomplete = new window.google.maps.places.Autocomplete(input);\n\n        // Add listener for place selection\n        autocomplete.addListener('place_changed', () => {\n          const place = autocomplete.getPlace();\n          console.log('Selected place:', place);\n          if (place.geometry) {\n            const location = place.geometry.location;\n            setLatLng({\n              lat: location.lat(),\n              lng: location.lng()\n            }); // Set lat/lng state\n            input.value = place;\n          } else {\n            input.value = \"Undefined\"; // Handle undefined case\n          }\n        });\n        setAutocomplete(autocomplete); // Store the autocomplete instance\n      }\n    }).catch(error => {\n      console.error(\"Error loading Google Maps API:\", error);\n    });\n    const fetchCases = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/api/cases'); // API endpoint to fetch cases\n        if (!response.ok) {\n          const errorMsg = await response.text();\n          throw new Error(`HTTP error! status: ${response.status}, message: ${errorMsg}`);\n        }\n        const data = await response.json();\n        setCases(data); // Update the state with fetched data\n      } catch (error) {\n        console.error('Error fetching cases:', error);\n      }\n    };\n    fetchCases(); // Initial fetch of case data\n    const interval = setInterval(fetchCases, 10000); // Fetch every 10 seconds\n\n    return () => clearInterval(interval); // Cleanup on unmount\n  }, []); // Empty dependency array means this effect runs once on mount\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        selectedCity: selectedCity,\n        setCurrentView: setCurrentView\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: [\" \", /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Welcome to the African Swine Fever Analysis App\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n                center: [51.505, -0.09],\n                zoom: 4,\n                style: {\n                  height: \"100%\",\n                  width: \"100%\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n                  url: `https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoiamFrZXN0ZXRzNSIsImEiOiJjbTBjdzQxc3UwNzJzMnJvY2R6dDB3NThsIn0.vn1gdMSqQyQLqycLx4g_DA`,\n                  attribution: \"\\xA9 <a href=\\\"https://api.mapbox.com/mapbox-gl-js/v2.8.1/mapbox-gl.css\\\" rel=\\\"stylesheet\\\"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MarkerClusterGroup, {\n                  children: cases.map((caseData, index) => /*#__PURE__*/_jsxDEV(Marker, {\n                    position: [caseData.lat, caseData.lng],\n                    icon: customIcon,\n                    children: /*#__PURE__*/_jsxDEV(Popup, {\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                          children: \"Case Details\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 140,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: \"Positive Case\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 141,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [\"Probability: \", caseData.prob]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 142,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [\"Username: \", caseData.user]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 143,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [\"Organization: \", caseData.org]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 144,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [\"Date: \", caseData.date]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 145,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 139,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 138,\n                      columnNumber: 25\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/gallery\",\n            element: /*#__PURE__*/_jsxDEV(Gallery, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"IE/CoiVXWgSBhPUukg/VyuKQNTc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Sidebar","Gallery","MapContainer","TileLayer","Marker","Popup","BrowserRouter","Router","Route","Routes","MarkerClusterGroup","React","useEffect","useState","useRef","L","jsxDEV","_jsxDEV","customIcon","Icon","iconUrl","require","iconSize","iconAnchor","loadGoogleMapsScript","apiKey","Promise","resolve","reject","window","google","script","document","createElement","params","URLSearchParams","key","libraries","callback","src","async","defer","onerror","Error","head","appendChild","initMap","App","_s","cases","setCases","currentView","setCurrentView","isMapLoaded","setIsMapLoaded","autocomplete","setAutocomplete","selectedCity","setSelectedCity","latLng","setLatLng","inputRef","then","console","log","input","current","maps","places","Autocomplete","addListener","place","getPlace","geometry","location","lat","lng","value","catch","error","fetchCases","response","fetch","ok","errorMsg","text","status","data","json","interval","setInterval","clearInterval","children","className","style","display","fileName","_jsxFileName","lineNumber","columnNumber","flex","path","element","center","zoom","height","width","url","attribution","map","caseData","index","position","icon","prob","user","org","date","_c","$RefreshReg$"],"sources":["C:/Apps/swine-fever-website-testing/swine-fever-website-testing/src/App.js"],"sourcesContent":["import './App.css';\nimport Sidebar from './components/Sidebar';\nimport Gallery from './components/Gallery';\nimport 'leaflet/dist/leaflet.css'; // Leaflet CSS for map styling\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'; // Components from React-Leaflet for map rendering\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport MarkerClusterGroup from 'react-leaflet-cluster'; // Component for clustering markers on the map\nimport React, { useEffect, useState, useRef } from 'react'; // React core library for functional components and hooks\nimport L from 'leaflet'; // Leaflet library for map functionality\n\n// Custom marker icon configuration using Leaflet\nconst customIcon = new L.Icon({\n  iconUrl: require('./assets/location_icon.png'),\n  iconSize: [15, 25], // Size of the icon in pixels\n  iconAnchor: [12, 41], // Anchor position of the icon relative to its size\n});\n\n// Script loader function (Add this inside or outside of your component as needed)\nconst loadGoogleMapsScript = (apiKey) => {\n  return new Promise((resolve, reject) => {\n    if (window.google) {\n      resolve();\n      return;\n    }\n\n    const script = document.createElement('script');\n    const params = new URLSearchParams({\n      key: apiKey,\n      libraries: 'places', // Add 'places' library for Autocomplete\n      callback: 'initMap',\n    });\n\n    script.src = `https://maps.googleapis.com/maps/api/js?${params}`;\n    script.async = true;\n    script.defer = true;\n    script.onerror = () => reject(new Error(\"Google Maps API could not load.\"));\n    document.head.appendChild(script);\n\n    window.initMap = () => {\n      resolve();\n    };\n  });\n};\n\n/**\n * Main application component that renders the map and sidebar.\n *\n * This component fetches data about positive cases and displays them on a Leaflet map,\n * with markers clustered for better visualization.\n */\nconst App = () => {\n  // State variable to store case data\n  const [cases, setCases] = useState([]);\n  const [currentView, setCurrentView] = useState('home');\n  const [isMapLoaded, setIsMapLoaded] = useState(false);\n  const [autocomplete, setAutocomplete] = useState(null);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [latLng, setLatLng] = useState(null); // State for latitude and longitude\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    const apiKey = 'AIzaSyAjp79bHPUDPrGUBUEUriQEtqPVTUSjIlk'; // Replace with your actual Google Maps API key\n\n    // Load Google Maps script\n    loadGoogleMapsScript(apiKey)\n      .then(() => {\n        console.log(\"Google Maps API loaded successfully\");\n        setIsMapLoaded(true); // Mark map as loaded\n\n        // Initialize Autocomplete after the API is loaded\n        const input = inputRef.current;\n        if (input && window.google) {\n          const autocomplete = new window.google.maps.places.Autocomplete(input);\n\n          // Add listener for place selection\n          autocomplete.addListener('place_changed', () => {\n            const place = autocomplete.getPlace();\n            console.log('Selected place:', place);\n\n            if (place.geometry) {\n              const location = place.geometry.location;\n              setLatLng({ lat: location.lat(), lng: location.lng() }); // Set lat/lng state\n              input.value = place;\n            } else {\n              input.value = \"Undefined\"; // Handle undefined case\n            }\n          });\n\n          setAutocomplete(autocomplete); // Store the autocomplete instance\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error loading Google Maps API:\", error);\n      });\n\n    const fetchCases = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/api/cases'); // API endpoint to fetch cases\n        if (!response.ok) {\n          const errorMsg = await response.text();\n          throw new Error(`HTTP error! status: ${response.status}, message: ${errorMsg}`);\n        }\n        const data = await response.json();\n        setCases(data); // Update the state with fetched data\n      } catch (error) {\n        console.error('Error fetching cases:', error);\n      }\n    };\n\n    fetchCases(); // Initial fetch of case data\n    const interval = setInterval(fetchCases, 10000); // Fetch every 10 seconds\n\n    return () => clearInterval(interval); // Cleanup on unmount\n  }, []); // Empty dependency array means this effect runs once on mount\n\n  return (\n    <Router>\n      <div className=\"App\" style={{ display: 'flex' }}>\n        <Sidebar selectedCity={selectedCity} setCurrentView={setCurrentView} /> {/* Pass function to Sidebar for view management */}\n\n        <div style={{ flex: 1 }}> {/* Ensuring the main content takes available space */}\n          <Routes>\n            <Route path=\"/\" element={\n              <div className=\"content\">\n                <h1>Welcome to the African Swine Fever Analysis App</h1>\n                <MapContainer center={[51.505, -0.09]} zoom={4} style={{ height: \"100%\", width: \"100%\" }}>\n                  {/* MapContainer for rendering the map with specified center and zoom */}\n                  <TileLayer\n                    url={`https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoiamFrZXN0ZXRzNSIsImEiOiJjbTBjdzQxc3UwNzJzMnJvY2R6dDB3NThsIn0.vn1gdMSqQyQLqycLx4g_DA`}\n                    attribution='&copy; <a href=\"https://api.mapbox.com/mapbox-gl-js/v2.8.1/mapbox-gl.css\" rel=\"stylesheet\"'\n                  />\n                  \n                  <MarkerClusterGroup>\n                    {/* Group markers to cluster them for better visibility */}\n                    {cases.map((caseData, index) => (\n                      <Marker key={index} position={[caseData.lat, caseData.lng]} icon={customIcon}>\n                        {/* Marker for each case with position and custom icon */}\n                        <Popup>\n                          <div>\n                            <h3>Case Details</h3>\n                            <p>Positive Case</p>\n                            <p>Probability: {caseData.prob}</p>\n                            <p>Username: {caseData.user}</p>\n                            <p>Organization: {caseData.org}</p>\n                            <p>Date: {caseData.date}</p>\n                            \n                          </div>\n                        </Popup>\n                      </Marker>\n                    ))}\n                  </MarkerClusterGroup>\n                </MapContainer>\n              </div>\n            } />\n            <Route path=\"/gallery\" element={<Gallery />} /> {/* Corrected path to \"/gallery\" */}\n          </Routes>\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}