{"ast":null,"code":"var _jsxFileName = \"C:\\\\Apps\\\\swine-fever-website-testing\\\\swine-fever-website-testing\\\\src\\\\components\\\\Sidebar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport CitySearch from './CitySearch.js';\n\n/**\r\n * Sidebar component for displaying statistics about reported cases.\r\n * It fetches and displays the count of positive and negative cases from the backend.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = ({\n  setCurrentView\n}) => {\n  _s();\n  const navigate = useNavigate(); // Use the navigate hook for routing\n  const [positiveCount, setPositiveCount] = useState(0);\n  const [negativeCount, setNegativeCount] = useState(0);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [imagePreview, setImagePreview] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [prediction, setPrediction] = useState(null);\n  const [probability, setProbability] = useState(null);\n  const [error, setError] = useState(null);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [user, setUser] = useState(false);\n  const [username, setUsername] = useState(null);\n  const [organization, setOrganization] = useState(null);\n  const [usernameInput, setUsernameInput] = useState('');\n  const [organizationInput, setOrganizationInput] = useState('');\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    setSelectedFile(file);\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setImagePreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handlePredict = async () => {\n    const formData = new FormData();\n    if (!selectedFile) {\n      alert(\"Please select an image first.\");\n      return;\n    } else {\n      formData.append('image', selectedFile); // 'image' should match the key used in multer\n    }\n    if (!user) {\n      alert('Please sign in before submitting.');\n      return;\n    } else {\n      formData.append('user', username);\n      formData.append('org', organization);\n    }\n\n    // Include the latitude and longitude from your selected location\n    if (selectedCity) {\n      formData.append('lat', selectedCity.lat);\n      formData.append('lng', selectedCity.lng);\n    } else {\n      alert(\"Please select a city first.\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('http://localhost:3000/predict', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Error in prediction request');\n      }\n      const result = await response.json();\n      const prediction = result.tagName;\n      const probability = result.probability;\n      setPrediction(prediction); // Update state with the prediction result\n      setProbability(probability);\n      console.log(\"Prediction Result:\", result); // Log the prediction result for debugging\n    } catch (err) {\n      setError(err.message); // Handle errors\n      console.error('Prediction Error:', err);\n    } finally {\n      setLoading(false); // Reset loading state\n    }\n  };\n  const removePreview = () => {\n    setImagePreview(null);\n    setSelectedFile(null);\n  };\n\n  /**\r\n   * Function to fetch the counts of positive and negative cases from the API.\r\n   * It updates the state with the fetched counts.\r\n   */\n  const fetchCounts = async () => {\n    try {\n      // Fetch the count of positive cases\n      const positiveResponse = await fetch('http://localhost:3000/api/positive-count');\n      const positiveData = await positiveResponse.json(); // Parse the JSON response\n      setPositiveCount(positiveData.positiveCount); // Update the state with the positive count\n\n      // Fetch the count of negative cases\n      const negativeResponse = await fetch('http://localhost:3000/api/negative-count');\n      if (!negativeResponse.ok) {\n        // Check if the response is not OK\n        const errorText = await negativeResponse.text();\n        throw new Error(`Failed to fetch negative cases count: ${errorText}`);\n      }\n      const negativeData = await negativeResponse.json(); // Parse the JSON response\n      setNegativeCount(negativeData.negativeCount); // Update the state with the negative count\n    } catch (error) {\n      console.error('Error fetching counts:', error);\n    }\n  };\n  const handleCitySearch = async cityName => {\n    try {\n      if (cityName) {\n        setSelectedCity({\n          name: cityName.name,\n          lat: cityName.lat,\n          lng: cityName.lng\n        });\n      } else {\n        throw new Error(\"City not found\");\n      }\n    } catch (err) {\n      console.error(\"Error fetching location data:\", err);\n      setError(\"Could not find location. Please try again.\");\n    }\n  };\n  const handleCitySelected = city => {\n    handleCitySearch(city); // Fetch location when a city is selected\n  };\n  const handleSignIn = async () => {\n    setUsername(usernameInput);\n    setOrganization(organizationInput);\n    const formData = new FormData();\n    formData.append('username', usernameInput);\n    try {\n      // Send a request to check if the username exists\n      const response = await fetch('http://localhost:3000/api/check-username', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      // Now handle the response data correctly\n      if (usernameInput === '' || organizationInput === '') {\n        setError('Please fill in your Username/Organization');\n      } else {\n        // Username is available, proceed to set values\n        setUsername(usernameInput);\n        setOrganization(organizationInput);\n\n        // Clear input fields after successful sign-in\n        setUsernameInput('');\n        setOrganizationInput('');\n        setUser(true);\n      }\n    } catch (error) {\n      console.error('Error checking username:', error);\n      setError('An error occurred while checking the username.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // useEffect hook to fetch counts when the component mounts\n  useEffect(() => {\n    fetchCounts(); // Call fetchCounts to get the initial counts\n  }, []); // Empty dependency array ensures this runs only on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingBottom: '15px'\n      },\n      className: \"sign-in\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Username: \", username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: usernameInput,\n        onChange: e => setUsernameInput(e.target.value),\n        placeholder: \"Enter your username\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Organization: \", organization]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: organizationInput,\n        onChange: e => setOrganizationInput(e.target.value),\n        placeholder: \"Enter your organization\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginBottom: '45px'\n      },\n      className: \"button\",\n      onClick: handleSignIn,\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginBottom: '-5px'\n      },\n      className: \"button\",\n      onClick: fetchCounts,\n      children: \"Refresh Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Number of Reported Positive Cases: \", positiveCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Number of Reported Negative Cases: \", negativeCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CitySearch, {\n      onCitySelected: handleCitySelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"file-input\",\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), imagePreview && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-preview\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imagePreview,\n        alt: \"Selected\",\n        style: {\n          width: 'auto',\n          height: '300px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: handlePredict,\n      disabled: loading && user,\n      children: loading ? 'Loading...' : 'Submit for Analysis'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), prediction && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingBottom: '15px'\n      },\n      className: \"prediction-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Prediction Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Result: \", prediction]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Probability: \", probability]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: removePreview,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginTop: '45px'\n      },\n      className: \"button\",\n      onClick: () => navigate('/gallery'),\n      children: \"View Image Gallery\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: () => navigate('/'),\n      children: \"Back to Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 17\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n};\n_s(Sidebar, \"Zxc1e2S9spE4fduyIhtslkiRPOU=\", false, function () {\n  return [useNavigate];\n});\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","CitySearch","jsxDEV","_jsxDEV","Sidebar","setCurrentView","_s","navigate","positiveCount","setPositiveCount","negativeCount","setNegativeCount","selectedFile","setSelectedFile","imagePreview","setImagePreview","loading","setLoading","prediction","setPrediction","probability","setProbability","error","setError","selectedCity","setSelectedCity","user","setUser","username","setUsername","organization","setOrganization","usernameInput","setUsernameInput","organizationInput","setOrganizationInput","handleFileChange","event","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","handlePredict","formData","FormData","alert","append","lat","lng","response","fetch","method","body","ok","Error","json","tagName","console","log","err","message","removePreview","fetchCounts","positiveResponse","positiveData","negativeResponse","errorText","text","negativeData","handleCitySearch","cityName","name","handleCitySelected","city","handleSignIn","className","children","style","paddingBottom","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","placeholder","required","marginBottom","onClick","onCitySelected","accept","src","alt","width","height","disabled","marginTop","_c","$RefreshReg$"],"sources":["C:/Apps/swine-fever-website-testing/swine-fever-website-testing/src/components/Sidebar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport CitySearch from './CitySearch.js';\r\n\r\n/**\r\n * Sidebar component for displaying statistics about reported cases.\r\n * It fetches and displays the count of positive and negative cases from the backend.\r\n */\r\nconst Sidebar = ({ setCurrentView }) => {\r\n  const navigate = useNavigate(); // Use the navigate hook for routing\r\n  const [positiveCount, setPositiveCount] = useState(0);\r\n  const [negativeCount, setNegativeCount] = useState(0);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [imagePreview, setImagePreview] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [prediction, setPrediction] = useState(null);\r\n  const [probability, setProbability] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [selectedCity, setSelectedCity] = useState(null);\r\n  const [user, setUser] = useState(false);\r\n  const [username, setUsername] = useState(null);\r\n  const [organization, setOrganization] = useState(null);\r\n  const [usernameInput, setUsernameInput] = useState('');\r\n  const [organizationInput, setOrganizationInput] = useState('');\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    setSelectedFile(file);\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setImagePreview(reader.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handlePredict = async () => {\r\n    const formData = new FormData();\r\n\r\n    if (!selectedFile) {\r\n      alert(\"Please select an image first.\");\r\n      return;\r\n    }\r\n    else{\r\n      formData.append('image', selectedFile); // 'image' should match the key used in multer\r\n    }\r\n\r\n    if (!user) {\r\n      alert('Please sign in before submitting.');\r\n      return;\r\n    }\r\n    else{\r\n      formData.append('user', username);\r\n      formData.append('org', organization);\r\n    }\r\n\r\n    \r\n\r\n    // Include the latitude and longitude from your selected location\r\n    if (selectedCity) {\r\n      formData.append('lat', selectedCity.lat);\r\n      formData.append('lng', selectedCity.lng);\r\n      \r\n  } else {\r\n      alert(\"Please select a city first.\");\r\n      return;\r\n  }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:3000/predict', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error in prediction request');\r\n      }\r\n\r\n      const result = await response.json();\r\n      const prediction = result.tagName;\r\n      const probability = result.probability;\r\n      setPrediction(prediction); // Update state with the prediction result\r\n      setProbability(probability)\r\n      console.log(\"Prediction Result:\", result); // Log the prediction result for debugging\r\n    } catch (err) {\r\n      setError(err.message); // Handle errors\r\n      console.error('Prediction Error:', err);\r\n    } finally {\r\n      setLoading(false); // Reset loading state\r\n    }\r\n  };\r\n\r\n  const removePreview = () => {\r\n    setImagePreview(null);\r\n    setSelectedFile(null);\r\n  };\r\n\r\n  /**\r\n   * Function to fetch the counts of positive and negative cases from the API.\r\n   * It updates the state with the fetched counts.\r\n   */\r\n  const fetchCounts = async () => {\r\n    try {\r\n      // Fetch the count of positive cases\r\n      const positiveResponse = await fetch('http://localhost:3000/api/positive-count');\r\n      const positiveData = await positiveResponse.json(); // Parse the JSON response\r\n      setPositiveCount(positiveData.positiveCount); // Update the state with the positive count\r\n  \r\n      // Fetch the count of negative cases\r\n      const negativeResponse = await fetch('http://localhost:3000/api/negative-count');\r\n      if (!negativeResponse.ok) { // Check if the response is not OK\r\n        const errorText = await negativeResponse.text();\r\n        throw new Error(`Failed to fetch negative cases count: ${errorText}`);\r\n      }\r\n      const negativeData = await negativeResponse.json(); // Parse the JSON response\r\n      setNegativeCount(negativeData.negativeCount); // Update the state with the negative count\r\n    } catch (error) {\r\n      console.error('Error fetching counts:', error);\r\n    }\r\n  };\r\n\r\n  const handleCitySearch = async (cityName) => {\r\n    try {      \r\n      if (cityName) {\r\n        setSelectedCity({\r\n          name: cityName.name,\r\n          lat: cityName.lat,\r\n          lng: cityName.lng,\r\n        });\r\n\r\n      } else {\r\n        throw new Error(\"City not found\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error fetching location data:\", err);\r\n      setError(\"Could not find location. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const handleCitySelected = (city) => {\r\n    handleCitySearch(city); // Fetch location when a city is selected\r\n  };\r\n\r\n  const handleSignIn = async () => {\r\n    setUsername(usernameInput);\r\n    setOrganization(organizationInput);\r\n  \r\n    const formData = new FormData();\r\n    formData.append('username', usernameInput);\r\n  \r\n    try {\r\n      // Send a request to check if the username exists\r\n      const response = await fetch('http://localhost:3000/api/check-username', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n  \r\n      // Now handle the response data correctly\r\n      if (usernameInput === '' || organizationInput === '') {\r\n        setError('Please fill in your Username/Organization');\r\n      } else {\r\n        // Username is available, proceed to set values\r\n        setUsername(usernameInput);\r\n        setOrganization(organizationInput);\r\n  \r\n        // Clear input fields after successful sign-in\r\n        setUsernameInput('');\r\n        setOrganizationInput('');\r\n        setUser(true);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error checking username:', error);\r\n      setError('An error occurred while checking the username.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n\r\n  // useEffect hook to fetch counts when the component mounts\r\n  useEffect(() => {\r\n    fetchCounts(); // Call fetchCounts to get the initial counts\r\n  }, []); // Empty dependency array ensures this runs only on mount\r\n\r\n  return (\r\n    <div className=\"sidebar\"> {/* Sidebar container */}\r\n    <div style={{paddingBottom: '15px'}} className=\"sign-in\">\r\n        <p>Username: {username}</p>\r\n        {/* Input field for username */}\r\n        <input \r\n          type=\"text\" \r\n          value={usernameInput} \r\n          onChange={(e) => setUsernameInput(e.target.value)}\r\n          placeholder=\"Enter your username\"\r\n          required\r\n        />\r\n        <p>Organization: {organization}</p>\r\n        {/* Input field for organization */}\r\n        <input \r\n          type=\"text\" \r\n          value={organizationInput} \r\n          onChange={(e) => setOrganizationInput(e.target.value)}\r\n          placeholder=\"Enter your organization\"\r\n          required\r\n        />\r\n      </div> \r\n      <button style={{marginBottom: '45px'}} className=\"button\" onClick={handleSignIn}>Sign In</button>\r\n\r\n      <button style={{marginBottom: '-5px'}} className=\"button\" onClick={fetchCounts}>Refresh Statistics</button>\r\n      <div>\r\n        <h3>Number of Reported Positive Cases: {positiveCount}</h3>\r\n        <h3>Number of Reported Negative Cases: {negativeCount}</h3>\r\n      </div>\r\n      {/* CitySearch Component */}\r\n      <CitySearch onCitySelected={handleCitySelected} />\r\n\r\n      {/* File input for image selection */}\r\n      <input\r\n        className=\"file-input\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={handleFileChange}\r\n      />\r\n      {/* Preview of the selected image */}\r\n      {imagePreview && (\r\n        <div className=\"image-preview\">\r\n          <img src={imagePreview} alt=\"Selected\" style={{ width: 'auto', height: '300px' }} />\r\n        </div>\r\n      )}\r\n      {/* Submit for Analysis Button */}\r\n      <button className=\"button\" onClick={handlePredict} disabled={loading && user}>\r\n        {loading ? 'Loading...' : 'Submit for Analysis'}\r\n      </button>\r\n      {prediction && (\r\n        <div style={{paddingBottom: '15px'}} className=\"prediction-result\">\r\n          <h3>Prediction Result:</h3>\r\n          <p>Result: {prediction}</p> {/* Display prediction result */}\r\n          <p>Probability: {probability}</p>\r\n        </div>\r\n      )}\r\n      <button className=\"button\" onClick={removePreview}>\r\n        Cancel\r\n      </button>\r\n      {/* Button to navigate to the gallery */}\r\n      <button style={{ marginTop: '45px'}} className=\"button\" onClick={() => navigate('/gallery')}>\r\n        View Image Gallery \r\n      </button>\r\n      <button className=\"button\" onClick={() => navigate('/')}>\r\n        Back to Home\r\n      </button>\r\n      {error && <p className=\"error-message\">{error}</p>} {/* Display error message */}\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}