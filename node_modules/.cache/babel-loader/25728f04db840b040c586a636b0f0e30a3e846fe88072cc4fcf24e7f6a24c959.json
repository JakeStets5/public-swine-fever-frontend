{"ast":null,"code":"import React,{useEffect,useRef}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const CitySearch=_ref=>{let{onCitySelected}=_ref;const inputRef=useRef(null);useEffect(()=>{const loadAutocomplete=()=>{if(!window.google)return;// Ensure Google API is loaded\n// Initialize the Autocomplete object with options\nconst autocomplete=new window.google.maps.places.Autocomplete(inputRef.current,{types:['(cities)'],// Restrict search to cities\nfields:['geometry','name']// Only request name and geometry\n});// Handle the city selection event\nautocomplete.addListener('place_changed',()=>{const place=autocomplete.getPlace();if(place.geometry){const cityData={name:place.name,lat:place.geometry.location.lat(),lng:place.geometry.location.lng()};onCitySelected(cityData);// Pass selected city data to parent\n}});};if(window.google){loadAutocomplete();}else{window.initAutocomplete=loadAutocomplete;// Setup a global function to be called when the API loads\n}},[onCitySelected]);return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",ref:inputRef,placeholder:\"Enter a city\",style:{width:'90%',padding:'10px',marginTop:'45px'}})});};export default CitySearch;","map":{"version":3,"names":["React","useEffect","useRef","jsx","_jsx","CitySearch","_ref","onCitySelected","inputRef","loadAutocomplete","window","google","autocomplete","maps","places","Autocomplete","current","types","fields","addListener","place","getPlace","geometry","cityData","name","lat","location","lng","initAutocomplete","children","type","ref","placeholder","style","width","padding","marginTop"],"sources":["C:/Apps/swine-fever-website-testing/swine-fever-website-testing/src/components/CitySearch.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\n\r\nconst CitySearch = ({ onCitySelected }) => {\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const loadAutocomplete = () => {\r\n      if (!window.google) return; // Ensure Google API is loaded\r\n\r\n      // Initialize the Autocomplete object with options\r\n      const autocomplete = new window.google.maps.places.Autocomplete(inputRef.current, {\r\n        types: ['(cities)'], // Restrict search to cities\r\n        fields: ['geometry', 'name'], // Only request name and geometry\r\n      });\r\n\r\n      // Handle the city selection event\r\n      autocomplete.addListener('place_changed', () => {\r\n        const place = autocomplete.getPlace();\r\n        if (place.geometry) {\r\n          const cityData = {\r\n            name: place.name,\r\n            lat: place.geometry.location.lat(),\r\n            lng: place.geometry.location.lng(),\r\n          };\r\n          onCitySelected(cityData); // Pass selected city data to parent\r\n        }\r\n      });\r\n    };\r\n\r\n    if (window.google) {\r\n      loadAutocomplete();\r\n    } else {\r\n      window.initAutocomplete = loadAutocomplete; // Setup a global function to be called when the API loads\r\n    }\r\n  }, [onCitySelected]);\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        ref={inputRef}\r\n        placeholder=\"Enter a city\"\r\n        style={{ width: '90%', padding: '10px', marginTop: '45px' }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CitySearch;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEjD,KAAM,CAAAC,UAAU,CAAGC,IAAA,EAAwB,IAAvB,CAAEC,cAAe,CAAC,CAAAD,IAAA,CACpC,KAAM,CAAAE,QAAQ,CAAGN,MAAM,CAAC,IAAI,CAAC,CAE7BD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAQ,gBAAgB,CAAGA,CAAA,GAAM,CAC7B,GAAI,CAACC,MAAM,CAACC,MAAM,CAAE,OAAQ;AAE5B;AACA,KAAM,CAAAC,YAAY,CAAG,GAAI,CAAAF,MAAM,CAACC,MAAM,CAACE,IAAI,CAACC,MAAM,CAACC,YAAY,CAACP,QAAQ,CAACQ,OAAO,CAAE,CAChFC,KAAK,CAAE,CAAC,UAAU,CAAC,CAAE;AACrBC,MAAM,CAAE,CAAC,UAAU,CAAE,MAAM,CAAG;AAChC,CAAC,CAAC,CAEF;AACAN,YAAY,CAACO,WAAW,CAAC,eAAe,CAAE,IAAM,CAC9C,KAAM,CAAAC,KAAK,CAAGR,YAAY,CAACS,QAAQ,CAAC,CAAC,CACrC,GAAID,KAAK,CAACE,QAAQ,CAAE,CAClB,KAAM,CAAAC,QAAQ,CAAG,CACfC,IAAI,CAAEJ,KAAK,CAACI,IAAI,CAChBC,GAAG,CAAEL,KAAK,CAACE,QAAQ,CAACI,QAAQ,CAACD,GAAG,CAAC,CAAC,CAClCE,GAAG,CAAEP,KAAK,CAACE,QAAQ,CAACI,QAAQ,CAACC,GAAG,CAAC,CACnC,CAAC,CACDpB,cAAc,CAACgB,QAAQ,CAAC,CAAE;AAC5B,CACF,CAAC,CAAC,CACJ,CAAC,CAED,GAAIb,MAAM,CAACC,MAAM,CAAE,CACjBF,gBAAgB,CAAC,CAAC,CACpB,CAAC,IAAM,CACLC,MAAM,CAACkB,gBAAgB,CAAGnB,gBAAgB,CAAE;AAC9C,CACF,CAAC,CAAE,CAACF,cAAc,CAAC,CAAC,CAEpB,mBACEH,IAAA,QAAAyB,QAAA,cACEzB,IAAA,UACE0B,IAAI,CAAC,MAAM,CACXC,GAAG,CAAEvB,QAAS,CACdwB,WAAW,CAAC,cAAc,CAC1BC,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAK,CAAEC,OAAO,CAAE,MAAM,CAAEC,SAAS,CAAE,MAAO,CAAE,CAC7D,CAAC,CACC,CAAC,CAEV,CAAC,CAED,cAAe,CAAA/B,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}