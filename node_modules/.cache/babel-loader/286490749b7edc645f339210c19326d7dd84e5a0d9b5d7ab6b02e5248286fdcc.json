{"ast":null,"code":"var _jsxFileName = \"C:\\\\Apps\\\\swine-fever-website\\\\swine-fever-website-frontend\\\\swine-fever-website-frontend\\\\src\\\\components\\\\Gallery.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Gallery() {\n  _s();\n  const [images, setImages] = useState([]);\n  const [error, setError] = useState(''); // State for error messages\n\n  useEffect(() => {\n    fetchImages(); // Fetch images when the component mounts\n  }, []);\n  const fetchImages = async () => {\n    try {\n      const imageResponse = await axios.get('https://swine-fever-backend.azurewebsites.net/retrieve-images');\n      setImages(imageResponse.data);\n    } catch (error) {\n      console.error('Error fetching images:', error);\n      setError('Error fetching images. Please try again.'); // Set error message\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gallery\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Image Gallery\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-grid\",\n      children: images.map(image => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"gallery-image\",\n          src: image.url,\n          alt: `ID: ${image._id}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Result: \", image.metadata.result]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Probability: \", image.metadata.probability, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Username: \", image.metadata.user]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Organization: \", image.metadata.org]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Date: \", image.metadata.date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)]\n      }, image._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(Gallery, \"JEd6+B50TLExe7jMPrlA1H/ZcHo=\");\n_c = Gallery;\nexport default Gallery;\nvar _c;\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Gallery","_s","images","setImages","error","setError","fetchImages","imageResponse","get","data","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","image","src","url","alt","_id","metadata","result","probability","user","org","date","_c","$RefreshReg$"],"sources":["C:/Apps/swine-fever-website/swine-fever-website-frontend/swine-fever-website-frontend/src/components/Gallery.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Gallery() {\r\n  const [images, setImages] = useState([]);\r\n  const [error, setError] = useState(''); // State for error messages\r\n\r\n  useEffect(() => {\r\n    fetchImages(); // Fetch images when the component mounts\r\n  }, []);\r\n\r\n  const fetchImages = async () => {\r\n    try {\r\n        const imageResponse = await axios.get('https://swine-fever-backend.azurewebsites.net/retrieve-images');\r\n        setImages(imageResponse.data);\r\n    } catch (error) {\r\n        console.error('Error fetching images:', error);\r\n        setError('Error fetching images. Please try again.'); // Set error message\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"gallery\">\r\n      <h2>Image Gallery</h2>\r\n      <div className=\"image-grid\">\r\n        {images.map((image) => (\r\n          <div className=\"image-item\" key={image._id}>\r\n            <img className=\"gallery-image\" src={image.url} alt={`ID: ${image._id}`} />\r\n            <div className=\"image-details\">\r\n              <p>Result: {image.metadata.result}</p>\r\n              <p>Probability: {image.metadata.probability}%</p>\r\n              <p>Username: {image.metadata.user}</p>\r\n              <p>Organization: {image.metadata.org}</p>\r\n              <p>Date: {image.metadata.date}</p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Gallery;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}