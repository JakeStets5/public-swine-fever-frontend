{"ast":null,"code":"var _jsxFileName = \"C:\\\\Apps\\\\swine-fever-website\\\\swine-fever-website-frontend\\\\swine-fever-website-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css'; // Importing custom styles\nimport Sidebar from './components/Sidebar'; // Importing the Sidebar component\nimport Gallery from './components/Gallery'; // Importing the Gallery component\nimport SignUp from './components/SignUp'; // Importing the SignUp component\nimport SignIn from './components/SignIn'; // Importing the SignIn component\nimport 'leaflet/dist/leaflet.css'; // Leaflet CSS for map styling\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'; // Importing map components from React-Leaflet\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'; // Importing Router components for navigation\nimport MarkerClusterGroup from 'react-leaflet-cluster'; // Component for clustering markers on the map\nimport React, { useEffect, useState, useRef } from 'react'; // Importing React core library for functional components and hooks\nimport L from 'leaflet'; // Leaflet library for map functionality\n\n// Custom marker icon configuration using Leaflet\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customIcon = new L.Icon({\n  iconUrl: require('./assets/location_icon.png'),\n  // URL for the marker icon image\n  iconSize: [15, 25],\n  // Size of the icon in pixels\n  iconAnchor: [12, 41] // Anchor position of the icon relative to its size\n});\n\n/**\r\n * Main application component that renders the map and sidebar.\r\n *\r\n * This component fetches data about positive cases and displays them on a Leaflet map,\r\n * with markers clustered for better visualization.\r\n */\nconst App = () => {\n  _s();\n  // State variables to manage application data\n  const [cases, setCases] = useState([]); // State to store fetched case data\n  const [currentView, setCurrentView] = useState('home'); // Current view in the sidebar\n  const [isMapLoaded, setIsMapLoaded] = useState(false); // State to check if the map is loaded\n  const [autocomplete, setAutocomplete] = useState(null); // State to store the Autocomplete instance\n  const [selectedCity, setSelectedCity] = useState(null); // State for selected city\n  const [isSignUpVisible, setIsSignUpVisible] = useState(false);\n  const [isSignInVisible, setIsSignInVisible] = useState(false);\n  const [username, setUsername] = useState(null);\n  const [organization, setOrganization] = useState(null);\n  const [isSignedIn, setIsSignedIn] = useState(false); // Boolean: if the user is signed in\n  const [latLng, setLatLng] = useState(null); // State for latitude and longitude\n  const [mapboxApiKey, setMapboxApiKey] = useState(null);\n  const [googleMapsApiKey, setGoogleMapsApiKey] = useState(null);\n  const inputRef = useRef(null); // Ref for the input element\n\n  const handleSignIn = () => {\n    setIsSignInVisible(true);\n  };\n  const handleCloseSignIn = () => {\n    setIsSignInVisible(false);\n  };\n  const handleSignInSuccess = data => {\n    setIsSignedIn(true); // Update the signed-in state\n    setUsername(data.username); // Set the username state\n    setOrganization(data.organization); // Set the organization state\n\n    // Close the sign-up modal if you're using one\n    setIsSignInVisible(false);\n  };\n\n  // Function to show the sign-up modal\n  const handleShowSignUp = () => {\n    setIsSignUpVisible(true);\n  };\n  const handleCloseSignUp = () => {\n    setIsSignUpVisible(false);\n  };\n  const handleSignUpSuccess = data => {\n    setUsername(data.username); // Set the username state\n    setIsSignedIn(true);\n    setOrganization(data.organization); // Set the organization state\n\n    // Close the sign-up modal if you're using one\n    setIsSignUpVisible(false);\n  };\n\n  // useEffect to fetch API keys only once\n  useEffect(() => {\n    const fetchKeys = async () => {\n      try {\n        const response = await fetch('https://swine-fever-backend.azurewebsites.net/api/keys'); // API endpoint to fetch keys\n        if (!response.ok) {\n          const errorMsg = await response.text();\n          throw new Error(`HTTP error! status: ${response.status}, message: ${errorMsg}`);\n        }\n        const data = await response.json();\n        setMapboxApiKey(data.mapboxApiKey); // Update state with Mapbox key\n        setGoogleMapsApiKey(data.googleMapsApiKey); // Update state with Google Maps key\n      } catch (error) {\n        console.error('Error fetching keys:', error);\n      }\n    };\n    fetchKeys();\n  }, []); // Run only once on mount\n\n  // Script loader function\n  const loadGoogleMapsScript = async () => {\n    return new Promise((resolve, reject) => {\n      // Check if Google Maps and Places library are already loaded\n      if (window.google && window.google.maps && window.google.maps.places) {\n        resolve(); // If already loaded, resolve the promise\n        return;\n      }\n\n      // Check if a script is already added\n      const existingScript = document.querySelector('script[src*=\"maps.googleapis.com\"]');\n      if (existingScript) {\n        // If script already exists, wait for it to load\n        existingScript.onload = () => {\n          if (window.google && window.google.maps && window.google.maps.places) {\n            resolve();\n          } else {\n            reject(new Error(\"Google Maps Places library is not available.\"));\n          }\n        };\n        return;\n      }\n\n      // If no existing script, create a new one\n      const script = document.createElement('script');\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${googleMapsApiKey}&libraries=places&v=3.58`;\n      script.async = true;\n      script.defer = true;\n\n      // Handle loading errors\n      script.onerror = () => reject(new Error(\"Google Maps API could not load.\"));\n\n      // Once the script loads, check for Places library\n      script.onload = () => {\n        if (window.google && window.google.maps && window.google.maps.places) {\n          resolve();\n        } else {\n          reject(new Error(\"Google Maps Places library is not available.\"));\n        }\n      };\n\n      // Append the script to the document\n      document.head.appendChild(script);\n    });\n  };\n\n  // UseEffect for loading Google Maps API and initializing Autocomplete\n  useEffect(() => {\n    if (!isMapLoaded && googleMapsApiKey) {\n      // Load Google Maps script\n      loadGoogleMapsScript(googleMapsApiKey).then(() => {\n        console.log(\"Google Maps API loaded successfully\");\n        setIsMapLoaded(true); // Mark map as loaded\n\n        // Initialize Autocomplete once the map is loaded and inputRef is available\n        if (inputRef.current) {\n          const input = inputRef.current;\n          console.log(\"inputRef is initialized:\", input);\n          if (window.google && window.google.maps && window.google.maps.places) {\n            try {\n              // Create a new Autocomplete instance\n              const autocomplete = new window.google.maps.places.Autocomplete(input);\n\n              // Add listener for place selection\n              autocomplete.addListener('place_changed', () => {\n                const place = autocomplete.getPlace();\n                console.log('Selected place:', place);\n                if (place.geometry) {\n                  const location = place.geometry.location;\n                  setLatLng({\n                    lat: location.lat(),\n                    lng: location.lng()\n                  }); // Set lat/lng state\n                  input.value = place.formatted_address || \"Location selected\";\n                } else {\n                  input.value = \"Undefined\"; // Handle undefined case\n                }\n              });\n              setAutocomplete(autocomplete); // Store the autocomplete instance\n            } catch (error) {\n              console.error(\"Error initializing Autocomplete:\", error);\n            }\n          } else {\n            console.error(\"Google Maps API is not properly loaded.\");\n          }\n        } else {\n          console.warn(\"inputRef is not yet available.\");\n        }\n      }).catch(error => {\n        console.error(\"Error loading Google Maps API:\", error);\n      });\n    }\n  }, [isMapLoaded, googleMapsApiKey, inputRef]); // Ensure all relevant dependencies are included\n\n  // Separate useEffect for fetching cases\n  useEffect(() => {\n    const fetchCases = async () => {\n      try {\n        const response = await fetch('https://swine-fever-backend.azurewebsites.net/api/cases'); // API endpoint to fetch cases\n        if (!response.ok) {\n          const errorMsg = await response.text();\n          throw new Error(`HTTP error! status: ${response.status}, message: ${errorMsg}`);\n        }\n        const data = await response.json();\n        setCases(data); // Update the state with fetched data\n      } catch (error) {\n        console.error('Error fetching cases:', error);\n      }\n    };\n    fetchCases(); // Initial fetch of case data\n    const interval = setInterval(fetchCases, 10000); // Fetch every 10 seconds\n\n    return () => clearInterval(interval); // Cleanup on unmount\n  }, []); // This effect runs only once on mount\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        isSignedIn: isSignedIn,\n        organization: organization,\n        username: username,\n        onSignUpClick: handleShowSignUp,\n        onSignInClick: handleSignIn,\n        isMapLoaded: isMapLoaded,\n        selectedCity: selectedCity,\n        setCurrentView: setCurrentView\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: [\" \", /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"header-container\",\n                style: {\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  position: 'relative'\n                },\n                children: [isSignedIn ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    fontSize: '20px',\n                    margin: 0\n                  },\n                  children: [\"Hello, \", username, \"!\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    fontSize: '20px',\n                    margin: 0\n                  },\n                  children: \"Please sign in\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                  style: {\n                    flex: 1,\n                    textAlign: 'center',\n                    margin: 20\n                  },\n                  children: \"Welcome to the African Swine Fever Analysis App\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n                center: [51.505, -0.09],\n                zoom: 4,\n                style: {\n                  height: \"100%\",\n                  width: \"100%\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n                  url: `https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/{z}/{x}/{y}?access_token=${mapboxApiKey}`,\n                  attribution: \"\\xA9 <a href=\\\"https://api.mapbox.com/mapbox-gl-js/v2.8.1/mapbox-gl.css\\\" rel=\\\"stylesheet\\\"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MarkerClusterGroup, {\n                  children: cases.map((caseData, index) => /*#__PURE__*/_jsxDEV(Marker, {\n                    position: [caseData.lat, caseData.lng],\n                    icon: customIcon,\n                    children: /*#__PURE__*/_jsxDEV(Popup, {\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                          children: \"Case Details\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 255,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: \"Positive Case\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 256,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [\"Probability: \", caseData.prob]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 257,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [\"Username: \", caseData.user]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 258,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [\"Organization: \", caseData.org]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 259,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [\"Date: \", caseData.date]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 260,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 254,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 253,\n                      columnNumber: 25\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/gallery\",\n            element: /*#__PURE__*/_jsxDEV(Gallery, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), isSignUpVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signup-backdrop\",\n        onClick: handleCloseSignUp,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signup-modal\",\n          onClick: e => e.stopPropagation(),\n          children: /*#__PURE__*/_jsxDEV(SignUp, {\n            onSignUpSuccess: handleSignUpSuccess,\n            onClose: handleCloseSignUp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this), isSignInVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signup-backdrop\",\n        onClick: handleCloseSignIn,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signup-modal\",\n          onClick: e => e.stopPropagation(),\n          children: /*#__PURE__*/_jsxDEV(SignIn, {\n            onSignInSuccess: handleSignInSuccess,\n            onClose: handleCloseSignIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"tk7vCcMRGACxwT3EbFbdba/HXj0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Sidebar","Gallery","SignUp","SignIn","MapContainer","TileLayer","Marker","Popup","BrowserRouter","Router","Route","Routes","MarkerClusterGroup","React","useEffect","useState","useRef","L","jsxDEV","_jsxDEV","customIcon","Icon","iconUrl","require","iconSize","iconAnchor","App","_s","cases","setCases","currentView","setCurrentView","isMapLoaded","setIsMapLoaded","autocomplete","setAutocomplete","selectedCity","setSelectedCity","isSignUpVisible","setIsSignUpVisible","isSignInVisible","setIsSignInVisible","username","setUsername","organization","setOrganization","isSignedIn","setIsSignedIn","latLng","setLatLng","mapboxApiKey","setMapboxApiKey","googleMapsApiKey","setGoogleMapsApiKey","inputRef","handleSignIn","handleCloseSignIn","handleSignInSuccess","data","handleShowSignUp","handleCloseSignUp","handleSignUpSuccess","fetchKeys","response","fetch","ok","errorMsg","text","Error","status","json","error","console","loadGoogleMapsScript","Promise","resolve","reject","window","google","maps","places","existingScript","document","querySelector","onload","script","createElement","src","async","defer","onerror","head","appendChild","then","log","current","input","Autocomplete","addListener","place","getPlace","geometry","location","lat","lng","value","formatted_address","warn","catch","fetchCases","interval","setInterval","clearInterval","children","className","style","display","onSignUpClick","onSignInClick","fileName","_jsxFileName","lineNumber","columnNumber","flex","path","element","justifyContent","alignItems","position","fontSize","margin","textAlign","center","zoom","height","width","url","attribution","map","caseData","index","icon","prob","user","org","date","onClick","e","stopPropagation","onSignUpSuccess","onClose","onSignInSuccess","_c","$RefreshReg$"],"sources":["C:/Apps/swine-fever-website/swine-fever-website-frontend/swine-fever-website-frontend/src/App.js"],"sourcesContent":["import './App.css'; // Importing custom styles\r\nimport Sidebar from './components/Sidebar'; // Importing the Sidebar component\r\nimport Gallery from './components/Gallery'; // Importing the Gallery component\r\nimport SignUp from './components/SignUp'; // Importing the SignUp component\r\nimport SignIn from './components/SignIn'; // Importing the SignIn component\r\nimport 'leaflet/dist/leaflet.css'; // Leaflet CSS for map styling\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'; // Importing map components from React-Leaflet\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'; // Importing Router components for navigation\r\nimport MarkerClusterGroup from 'react-leaflet-cluster'; // Component for clustering markers on the map\r\nimport React, { useEffect, useState, useRef } from 'react'; // Importing React core library for functional components and hooks\r\nimport L from 'leaflet'; // Leaflet library for map functionality\r\n\r\n// Custom marker icon configuration using Leaflet\r\nconst customIcon = new L.Icon({\r\n  iconUrl: require('./assets/location_icon.png'), // URL for the marker icon image\r\n  iconSize: [15, 25], // Size of the icon in pixels\r\n  iconAnchor: [12, 41], // Anchor position of the icon relative to its size\r\n});\r\n\r\n/**\r\n * Main application component that renders the map and sidebar.\r\n *\r\n * This component fetches data about positive cases and displays them on a Leaflet map,\r\n * with markers clustered for better visualization.\r\n */\r\nconst App = () => {\r\n  // State variables to manage application data\r\n  const [cases, setCases] = useState([]); // State to store fetched case data\r\n  const [currentView, setCurrentView] = useState('home'); // Current view in the sidebar\r\n  const [isMapLoaded, setIsMapLoaded] = useState(false); // State to check if the map is loaded\r\n  const [autocomplete, setAutocomplete] = useState(null); // State to store the Autocomplete instance\r\n  const [selectedCity, setSelectedCity] = useState(null); // State for selected city\r\n  const [isSignUpVisible, setIsSignUpVisible] = useState(false);\r\n  const [isSignInVisible, setIsSignInVisible] = useState(false);  \r\n  const [username, setUsername] = useState(null);\r\n  const [organization, setOrganization] = useState(null);\r\n  const [isSignedIn, setIsSignedIn] = useState(false); // Boolean: if the user is signed in\r\n  const [latLng, setLatLng] = useState(null); // State for latitude and longitude\r\n  const [mapboxApiKey, setMapboxApiKey] = useState(null);\r\n  const [googleMapsApiKey, setGoogleMapsApiKey] = useState(null);\r\n  const inputRef = useRef(null); // Ref for the input element\r\n\r\n  const handleSignIn = () => {\r\n    setIsSignInVisible(true);\r\n  }; \r\n\r\n  const handleCloseSignIn = () => {\r\n    setIsSignInVisible(false);\r\n  };\r\n\r\n  const handleSignInSuccess = (data) => {  \r\n    setIsSignedIn(true); // Update the signed-in state\r\n    setUsername(data.username); // Set the username state\r\n    setOrganization(data.organization); // Set the organization state\r\n  \r\n    // Close the sign-up modal if you're using one\r\n    setIsSignInVisible(false);\r\n  };\r\n\r\n  // Function to show the sign-up modal\r\n  const handleShowSignUp = () => {\r\n    setIsSignUpVisible(true);\r\n  };\r\n\r\n  const handleCloseSignUp = () => {\r\n    setIsSignUpVisible(false);\r\n  };\r\n\r\n  const handleSignUpSuccess = (data) => {\r\n    setUsername(data.username); // Set the username state\r\n    setIsSignedIn(true);\r\n    setOrganization(data.organization); // Set the organization state\r\n\r\n    // Close the sign-up modal if you're using one\r\n    setIsSignUpVisible(false);\r\n  };\r\n\r\n  // useEffect to fetch API keys only once\r\n  useEffect(() => {\r\n    const fetchKeys = async () => {\r\n      try {\r\n        const response = await fetch('https://swine-fever-backend.azurewebsites.net/api/keys'); // API endpoint to fetch keys\r\n        if (!response.ok) {\r\n          const errorMsg = await response.text();\r\n          throw new Error(`HTTP error! status: ${response.status}, message: ${errorMsg}`);\r\n        }\r\n        const data = await response.json();\r\n        setMapboxApiKey(data.mapboxApiKey); // Update state with Mapbox key\r\n        setGoogleMapsApiKey(data.googleMapsApiKey); // Update state with Google Maps key\r\n      } catch (error) {\r\n        console.error('Error fetching keys:', error);\r\n      }\r\n    };\r\n    fetchKeys();\r\n  }, []); // Run only once on mount\r\n\r\n  // Script loader function\r\n  const loadGoogleMapsScript = async () => {\r\n    return new Promise((resolve, reject) => {\r\n      // Check if Google Maps and Places library are already loaded\r\n      if (window.google && window.google.maps && window.google.maps.places) {\r\n        resolve(); // If already loaded, resolve the promise\r\n        return;\r\n      }\r\n  \r\n      // Check if a script is already added\r\n      const existingScript = document.querySelector('script[src*=\"maps.googleapis.com\"]');\r\n      \r\n      if (existingScript) {\r\n        // If script already exists, wait for it to load\r\n        existingScript.onload = () => {\r\n          if (window.google && window.google.maps && window.google.maps.places) {\r\n            resolve();\r\n          } else {\r\n            reject(new Error(\"Google Maps Places library is not available.\"));\r\n          }\r\n        };\r\n        return;\r\n      }\r\n  \r\n      // If no existing script, create a new one\r\n      const script = document.createElement('script');\r\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${googleMapsApiKey}&libraries=places&v=3.58`;\r\n      script.async = true;\r\n      script.defer = true;\r\n  \r\n      // Handle loading errors\r\n      script.onerror = () => reject(new Error(\"Google Maps API could not load.\"));\r\n      \r\n      // Once the script loads, check for Places library\r\n      script.onload = () => {\r\n        if (window.google && window.google.maps && window.google.maps.places) {\r\n          resolve();\r\n        } else {\r\n          reject(new Error(\"Google Maps Places library is not available.\"));\r\n        }\r\n      };\r\n  \r\n      // Append the script to the document\r\n      document.head.appendChild(script);\r\n    });\r\n  };\r\n\r\n  // UseEffect for loading Google Maps API and initializing Autocomplete\r\n  useEffect(() => {\r\n    if (!isMapLoaded && googleMapsApiKey) {\r\n      // Load Google Maps script\r\n      loadGoogleMapsScript(googleMapsApiKey)\r\n        .then(() => {\r\n          console.log(\"Google Maps API loaded successfully\");\r\n          setIsMapLoaded(true); // Mark map as loaded\r\n\r\n          // Initialize Autocomplete once the map is loaded and inputRef is available\r\n          if (inputRef.current) {\r\n            const input = inputRef.current;\r\n            console.log(\"inputRef is initialized:\", input);\r\n\r\n            if (window.google && window.google.maps && window.google.maps.places) {\r\n              try {\r\n                // Create a new Autocomplete instance\r\n                const autocomplete = new window.google.maps.places.Autocomplete(input);\r\n\r\n                // Add listener for place selection\r\n                autocomplete.addListener('place_changed', () => {\r\n                  const place = autocomplete.getPlace();\r\n                  console.log('Selected place:', place);\r\n\r\n                  if (place.geometry) {\r\n                    const location = place.geometry.location;\r\n                    setLatLng({ lat: location.lat(), lng: location.lng() }); // Set lat/lng state\r\n                    input.value = place.formatted_address || \"Location selected\";\r\n                  } else {\r\n                    input.value = \"Undefined\"; // Handle undefined case\r\n                  }\r\n                });\r\n\r\n                setAutocomplete(autocomplete); // Store the autocomplete instance\r\n              } catch (error) {\r\n                console.error(\"Error initializing Autocomplete:\", error);\r\n              }\r\n            } else {\r\n              console.error(\"Google Maps API is not properly loaded.\");\r\n            }\r\n          } else {\r\n            console.warn(\"inputRef is not yet available.\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error loading Google Maps API:\", error);\r\n        });\r\n    }\r\n  }, [isMapLoaded, googleMapsApiKey, inputRef]); // Ensure all relevant dependencies are included\r\n\r\n    // Separate useEffect for fetching cases\r\n  useEffect(() => {\r\n    const fetchCases = async () => {\r\n      try {\r\n        const response = await fetch('https://swine-fever-backend.azurewebsites.net/api/cases'); // API endpoint to fetch cases\r\n        if (!response.ok) {\r\n          const errorMsg = await response.text();\r\n          throw new Error(`HTTP error! status: ${response.status}, message: ${errorMsg}`);\r\n        }\r\n        const data = await response.json();\r\n        setCases(data); // Update the state with fetched data\r\n      } catch (error) {\r\n        console.error('Error fetching cases:', error);\r\n      }\r\n    };\r\n\r\n    fetchCases(); // Initial fetch of case data\r\n    const interval = setInterval(fetchCases, 10000); // Fetch every 10 seconds\r\n\r\n    return () => clearInterval(interval); // Cleanup on unmount\r\n  }, []); // This effect runs only once on mount\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\" style={{ display: 'flex' }}>\r\n        <Sidebar \r\n        isSignedIn={isSignedIn}\r\n        organization={organization}\r\n        username={username}\r\n        onSignUpClick={handleShowSignUp} \r\n        onSignInClick={handleSignIn}\r\n        isMapLoaded={isMapLoaded} \r\n        selectedCity={selectedCity} \r\n        setCurrentView={setCurrentView} /> {/* Pass function to Sidebar for view management */}\r\n\r\n        <div style={{ flex: 1 }}> {/* Ensuring the main content takes available space */}\r\n          <Routes>\r\n            <Route path=\"/\" element={\r\n              <div className=\"content\">\r\n                <div className=\"header-container\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative' }}>\r\n                  {isSignedIn ? (\r\n                    <p style={{ fontSize: '20px', margin: 0}}>Hello, {username}!</p>\r\n                  ) : (\r\n                    <p style={{ fontSize: '20px', margin: 0}}>Please sign in</p>\r\n                  )}\r\n                  <h1 style={{ flex: 1, textAlign: 'center', margin: 20 }}>Welcome to the African Swine Fever Analysis App</h1>\r\n                </div>\r\n                <MapContainer center={[51.505, -0.09]} zoom={4} style={{ height: \"100%\", width: \"100%\" }}>\r\n                  {/* MapContainer for rendering the map with specified center and zoom */}\r\n                  <TileLayer\r\n                    url={`https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/{z}/{x}/{y}?access_token=${mapboxApiKey}`}\r\n                    attribution='&copy; <a href=\"https://api.mapbox.com/mapbox-gl-js/v2.8.1/mapbox-gl.css\" rel=\"stylesheet\"'\r\n                  />\r\n                  \r\n                  <MarkerClusterGroup>\r\n                    {/* Group markers to cluster them for better visibility */}\r\n                    {cases.map((caseData, index) => (\r\n                      <Marker key={index} position={[caseData.lat, caseData.lng]} icon={customIcon}>\r\n                        {/* Marker for each case with position and custom icon */}\r\n                        <Popup>\r\n                          <div>\r\n                            <h3>Case Details</h3>\r\n                            <p>Positive Case</p>\r\n                            <p>Probability: {caseData.prob}</p>\r\n                            <p>Username: {caseData.user}</p>\r\n                            <p>Organization: {caseData.org}</p>\r\n                            <p>Date: {caseData.date}</p>\r\n                            \r\n                          </div>\r\n                        </Popup>\r\n                      </Marker>\r\n                    ))}\r\n                  </MarkerClusterGroup>\r\n                </MapContainer>\r\n              </div>\r\n            } />\r\n            <Route path=\"/gallery\" element={<Gallery />} /> {/* Path to \"/gallery\" */}\r\n          </Routes>\r\n        </div>\r\n        {isSignUpVisible && (\r\n          <div className=\"signup-backdrop\" onClick={handleCloseSignUp}>\r\n            <div className=\"signup-modal\" onClick={(e) => e.stopPropagation()}>\r\n              <SignUp onSignUpSuccess={handleSignUpSuccess} onClose={handleCloseSignUp} />\r\n            </div>\r\n          </div>\r\n        )}\r\n        {isSignInVisible && (\r\n          <div className=\"signup-backdrop\" onClick={handleCloseSignIn}>\r\n            <div className=\"signup-modal\" onClick={(e) => e.stopPropagation()}>\r\n              <SignIn onSignInSuccess={handleSignInSuccess} onClose={handleCloseSignIn} />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}