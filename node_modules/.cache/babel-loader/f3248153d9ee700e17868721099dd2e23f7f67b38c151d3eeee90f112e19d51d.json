{"ast":null,"code":"import'./App.css';import Sidebar from'./components/Sidebar';import Gallery from'./components/Gallery';import'leaflet/dist/leaflet.css';// Leaflet CSS for map styling\nimport{MapContainer,TileLayer,Marker,Popup}from'react-leaflet';// Components from React-Leaflet for map rendering\nimport{BrowserRouter as Router,Route,Routes}from'react-router-dom';import MarkerClusterGroup from'react-leaflet-cluster';// Component for clustering markers on the map\nimport React,{useEffect,useState,useRef}from'react';// React core library for functional components and hooks\nimport L from'leaflet';// Leaflet library for map functionality\n// Custom marker icon configuration using Leaflet\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const customIcon=new L.Icon({iconUrl:require('./assets/location_icon.png'),iconSize:[15,25],// Size of the icon in pixels\niconAnchor:[12,41]// Anchor position of the icon relative to its size\n});// Script loader function (Add this inside or outside of your component as needed)\nconst loadGoogleMapsScript=apiKey=>{return new Promise((resolve,reject)=>{if(window.google){resolve();return;}const script=document.createElement('script');const params=new URLSearchParams({key:apiKey,libraries:'places',// Add 'places' library for Autocomplete\ncallback:'initMap'});script.src=`https://maps.googleapis.com/maps/api/js?${params}`;script.async=true;script.defer=true;script.onerror=()=>reject(new Error(\"Google Maps API could not load.\"));document.head.appendChild(script);window.initMap=()=>{resolve();};});};/**\n * Main application component that renders the map and sidebar.\n *\n * This component fetches data about positive cases and displays them on a Leaflet map,\n * with markers clustered for better visualization.\n */const App=()=>{// State variable to store case data\nconst[cases,setCases]=useState([]);const[currentView,setCurrentView]=useState('home');const[isMapLoaded,setIsMapLoaded]=useState(false);const[autocomplete,setAutocomplete]=useState(null);const[selectedCity,setSelectedCity]=useState(null);const[latLng,setLatLng]=useState(null);// State for latitude and longitude\nconst inputRef=useRef(null);useEffect(()=>{const apiKey='AIzaSyAjp79bHPUDPrGUBUEUriQEtqPVTUSjIlk';// Replace with your actual Google Maps API key\n// Load Google Maps script\nloadGoogleMapsScript(apiKey).then(()=>{console.log(\"Google Maps API loaded successfully\");setIsMapLoaded(true);// Mark map as loaded\n// Initialize Autocomplete after the API is loaded\nconst input=inputRef.current;if(input&&window.google){const autocomplete=new window.google.maps.places.Autocomplete(input);// Add listener for place selection\nautocomplete.addListener('place_changed',()=>{const place=autocomplete.getPlace();console.log('Selected place:',place);if(place.geometry){const location=place.geometry.location;setLatLng({lat:location.lat(),lng:location.lng()});// Set lat/lng state\ninput.value=place;}else{input.value=\"Undefined\";// Handle undefined case\n}});setAutocomplete(autocomplete);// Store the autocomplete instance\n}}).catch(error=>{console.error(\"Error loading Google Maps API:\",error);});const fetchCases=async()=>{try{const response=await fetch('http://localhost:3000/api/cases');// API endpoint to fetch cases\nif(!response.ok){const errorMsg=await response.text();throw new Error(`HTTP error! status: ${response.status}, message: ${errorMsg}`);}const data=await response.json();setCases(data);// Update the state with fetched data\n}catch(error){console.error('Error fetching cases:',error);}};fetchCases();// Initial fetch of case data\nconst interval=setInterval(fetchCases,10000);// Fetch every 10 seconds\nreturn()=>clearInterval(interval);// Cleanup on unmount\n},[]);// Empty dependency array means this effect runs once on mount\nreturn/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"App\",style:{display:'flex'},children:[/*#__PURE__*/_jsx(Sidebar,{selectedCity:selectedCity,setCurrentView:setCurrentView}),\" \",/*#__PURE__*/_jsxs(\"div\",{style:{flex:1},children:[\" \",/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Welcome to the African Swine Fever Analysis App\"}),/*#__PURE__*/_jsxs(MapContainer,{center:[51.505,-0.09],zoom:4,style:{height:\"100%\",width:\"100%\"},children:[/*#__PURE__*/_jsx(TileLayer,{url:`https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoiamFrZXN0ZXRzNSIsImEiOiJjbTBjdzQxc3UwNzJzMnJvY2R6dDB3NThsIn0.vn1gdMSqQyQLqycLx4g_DA`,attribution:\"\\xA9 <a href=\\\"https://api.mapbox.com/mapbox-gl-js/v2.8.1/mapbox-gl.css\\\" rel=\\\"stylesheet\\\"\"}),/*#__PURE__*/_jsx(MarkerClusterGroup,{children:cases.map((caseData,index)=>/*#__PURE__*/_jsx(Marker,{position:[caseData.lat,caseData.lng],icon:customIcon,children:/*#__PURE__*/_jsx(Popup,{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Case Details\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Positive Case\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Probability: \",caseData.prob]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Username: \",caseData.user]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Organization: \",caseData.org]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Date: \",caseData.date]})]})})},index))})]})]})}),/*#__PURE__*/_jsx(Route,{path:\"/gallery\",element:/*#__PURE__*/_jsx(Gallery,{})}),\" \"]})]})]})});};export default App;","map":{"version":3,"names":["Sidebar","Gallery","MapContainer","TileLayer","Marker","Popup","BrowserRouter","Router","Route","Routes","MarkerClusterGroup","React","useEffect","useState","useRef","L","jsx","_jsx","jsxs","_jsxs","customIcon","Icon","iconUrl","require","iconSize","iconAnchor","loadGoogleMapsScript","apiKey","Promise","resolve","reject","window","google","script","document","createElement","params","URLSearchParams","key","libraries","callback","src","async","defer","onerror","Error","head","appendChild","initMap","App","cases","setCases","currentView","setCurrentView","isMapLoaded","setIsMapLoaded","autocomplete","setAutocomplete","selectedCity","setSelectedCity","latLng","setLatLng","inputRef","then","console","log","input","current","maps","places","Autocomplete","addListener","place","getPlace","geometry","location","lat","lng","value","catch","error","fetchCases","response","fetch","ok","errorMsg","text","status","data","json","interval","setInterval","clearInterval","children","className","style","display","flex","path","element","center","zoom","height","width","url","attribution","map","caseData","index","position","icon","prob","user","org","date"],"sources":["C:/Apps/swine-fever-website-testing/swine-fever-website-testing/src/App.js"],"sourcesContent":["import './App.css';\nimport Sidebar from './components/Sidebar';\nimport Gallery from './components/Gallery';\nimport 'leaflet/dist/leaflet.css'; // Leaflet CSS for map styling\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'; // Components from React-Leaflet for map rendering\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport MarkerClusterGroup from 'react-leaflet-cluster'; // Component for clustering markers on the map\nimport React, { useEffect, useState, useRef } from 'react'; // React core library for functional components and hooks\nimport L from 'leaflet'; // Leaflet library for map functionality\n\n// Custom marker icon configuration using Leaflet\nconst customIcon = new L.Icon({\n  iconUrl: require('./assets/location_icon.png'),\n  iconSize: [15, 25], // Size of the icon in pixels\n  iconAnchor: [12, 41], // Anchor position of the icon relative to its size\n});\n\n// Script loader function (Add this inside or outside of your component as needed)\nconst loadGoogleMapsScript = (apiKey) => {\n  return new Promise((resolve, reject) => {\n    if (window.google) {\n      resolve();\n      return;\n    }\n\n    const script = document.createElement('script');\n    const params = new URLSearchParams({\n      key: apiKey,\n      libraries: 'places', // Add 'places' library for Autocomplete\n      callback: 'initMap',\n    });\n\n    script.src = `https://maps.googleapis.com/maps/api/js?${params}`;\n    script.async = true;\n    script.defer = true;\n    script.onerror = () => reject(new Error(\"Google Maps API could not load.\"));\n    document.head.appendChild(script);\n\n    window.initMap = () => {\n      resolve();\n    };\n  });\n};\n\n/**\n * Main application component that renders the map and sidebar.\n *\n * This component fetches data about positive cases and displays them on a Leaflet map,\n * with markers clustered for better visualization.\n */\nconst App = () => {\n  // State variable to store case data\n  const [cases, setCases] = useState([]);\n  const [currentView, setCurrentView] = useState('home');\n  const [isMapLoaded, setIsMapLoaded] = useState(false);\n  const [autocomplete, setAutocomplete] = useState(null);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [latLng, setLatLng] = useState(null); // State for latitude and longitude\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    const apiKey = 'AIzaSyAjp79bHPUDPrGUBUEUriQEtqPVTUSjIlk'; // Replace with your actual Google Maps API key\n\n    // Load Google Maps script\n    loadGoogleMapsScript(apiKey)\n      .then(() => {\n        console.log(\"Google Maps API loaded successfully\");\n        setIsMapLoaded(true); // Mark map as loaded\n\n        // Initialize Autocomplete after the API is loaded\n        const input = inputRef.current;\n        if (input && window.google) {\n          const autocomplete = new window.google.maps.places.Autocomplete(input);\n\n          // Add listener for place selection\n          autocomplete.addListener('place_changed', () => {\n            const place = autocomplete.getPlace();\n            console.log('Selected place:', place);\n\n            if (place.geometry) {\n              const location = place.geometry.location;\n              setLatLng({ lat: location.lat(), lng: location.lng() }); // Set lat/lng state\n              input.value = place;\n            } else {\n              input.value = \"Undefined\"; // Handle undefined case\n            }\n          });\n\n          setAutocomplete(autocomplete); // Store the autocomplete instance\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error loading Google Maps API:\", error);\n      });\n\n    const fetchCases = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/api/cases'); // API endpoint to fetch cases\n        if (!response.ok) {\n          const errorMsg = await response.text();\n          throw new Error(`HTTP error! status: ${response.status}, message: ${errorMsg}`);\n        }\n        const data = await response.json();\n        setCases(data); // Update the state with fetched data\n      } catch (error) {\n        console.error('Error fetching cases:', error);\n      }\n    };\n\n    fetchCases(); // Initial fetch of case data\n    const interval = setInterval(fetchCases, 10000); // Fetch every 10 seconds\n\n    return () => clearInterval(interval); // Cleanup on unmount\n  }, []); // Empty dependency array means this effect runs once on mount\n\n  return (\n    <Router>\n      <div className=\"App\" style={{ display: 'flex' }}>\n        <Sidebar selectedCity={selectedCity} setCurrentView={setCurrentView} /> {/* Pass function to Sidebar for view management */}\n\n        <div style={{ flex: 1 }}> {/* Ensuring the main content takes available space */}\n          <Routes>\n            <Route path=\"/\" element={\n              <div className=\"content\">\n                <h1>Welcome to the African Swine Fever Analysis App</h1>\n                <MapContainer center={[51.505, -0.09]} zoom={4} style={{ height: \"100%\", width: \"100%\" }}>\n                  {/* MapContainer for rendering the map with specified center and zoom */}\n                  <TileLayer\n                    url={`https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoiamFrZXN0ZXRzNSIsImEiOiJjbTBjdzQxc3UwNzJzMnJvY2R6dDB3NThsIn0.vn1gdMSqQyQLqycLx4g_DA`}\n                    attribution='&copy; <a href=\"https://api.mapbox.com/mapbox-gl-js/v2.8.1/mapbox-gl.css\" rel=\"stylesheet\"'\n                  />\n                  \n                  <MarkerClusterGroup>\n                    {/* Group markers to cluster them for better visibility */}\n                    {cases.map((caseData, index) => (\n                      <Marker key={index} position={[caseData.lat, caseData.lng]} icon={customIcon}>\n                        {/* Marker for each case with position and custom icon */}\n                        <Popup>\n                          <div>\n                            <h3>Case Details</h3>\n                            <p>Positive Case</p>\n                            <p>Probability: {caseData.prob}</p>\n                            <p>Username: {caseData.user}</p>\n                            <p>Organization: {caseData.org}</p>\n                            <p>Date: {caseData.date}</p>\n                            \n                          </div>\n                        </Popup>\n                      </Marker>\n                    ))}\n                  </MarkerClusterGroup>\n                </MapContainer>\n              </div>\n            } />\n            <Route path=\"/gallery\" element={<Gallery />} /> {/* Corrected path to \"/gallery\" */}\n          </Routes>\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}